// ----------------------- memory_ports.ice -----------
// @sylefeb - Silice standard library
// Memory port interfaces
// 2020-09-03

// single port BRAM

interface bram_port {
  output! addr,
  output! wenable,
  input   rdata,
  output! wdata,
}

// single port BROM

interface brom_port {
  output! addr,
  input   rdata,
}

// dual port BRAM

interface dualport_bram_port0 {
  output! addr0,
  output! wenable0,
  input   rdata0,
  output! wdata0,
}

interface dualport_bram_port1 {
  output! addr1,
  output! wenable1,
  input   rdata1,
  output! wdata1,
}

interface dualport_bram_ports {
  output! addr0,
  output! wenable0,
  input   rdata0,
  output! wdata0,
  output! addr1,
  output! wenable1,
  input   rdata1,
  output! wdata1,
}

// simple dual port BRAM

interface simple_dualport_bram_port0 {
  output! addr0,
  input   rdata0,
}

interface simple_dualport_bram_port1 {
  output! addr1,
  output! wenable1,
  output! wdata1,
}

// ----------------------- end of memory_ports.ice ----

//IEEE 754




bitfield float{
    uint1 sign,
    uint8 exponant,
    uint23 fraction,
}


algorithm uint32_to_float(input uint32 i, output uint32 f){
    uint1 s :=0;
    uint8 exponant = 0;
    uint23 mantissa = 0;
        if(i[31,1]){
            exponant = {1b1, 7d31} -1;
            mantissa = {i[0,31], -8d0};
        } else {
        if(i[30,1]){
            exponant = {1b1, 7d30} -1;
            mantissa = {i[0,30], -7d0};
        } else {
        if(i[29,1]){
            exponant = {1b1, 7d29} -1;
            mantissa = {i[0,29], -6d0};
        } else {
        if(i[28,1]){
            exponant = {1b1, 7d28} -1;
            mantissa = {i[0,28], -5d0};
        } else {
        if(i[27,1]){
            exponant = {1b1, 7d27} -1;
            mantissa = {i[0,27], -4d0};
        } else {
        if(i[26,1]){
            exponant = {1b1, 7d26} -1;
            mantissa = {i[0,26], -3d0};
        } else {
        if(i[25,1]){
            exponant = {1b1, 7d25} -1;
            mantissa = {i[0,25], -2d0};
        } else {
        if(i[24,1]){
            exponant = {1b1, 7d24} -1;
            mantissa = {i[0,24], -1d0};
        } else {
        if(i[23,1]){
            exponant = {1b1, 7d23} -1;
            mantissa = {i[0,23], 0d0};
        } else {
        if(i[22,1]){
            exponant = {1b1, 7d22} -1;
            mantissa = {i[0,22], 1d0};
        } else {
        if(i[21,1]){
            exponant = {1b1, 7d21} -1;
            mantissa = {i[0,21], 2d0};
        } else {
        if(i[20,1]){
            exponant = {1b1, 7d20} -1;
            mantissa = {i[0,20], 3d0};
        } else {
        if(i[19,1]){
            exponant = {1b1, 7d19} -1;
            mantissa = {i[0,19], 4d0};
        } else {
        if(i[18,1]){
            exponant = {1b1, 7d18} -1;
            mantissa = {i[0,18], 5d0};
        } else {
        if(i[17,1]){
            exponant = {1b1, 7d17} -1;
            mantissa = {i[0,17], 6d0};
        } else {
        if(i[16,1]){
            exponant = {1b1, 7d16} -1;
            mantissa = {i[0,16], 7d0};
        } else {
        if(i[15,1]){
            exponant = {1b1, 7d15} -1;
            mantissa = {i[0,15], 8d0};
        } else {
        if(i[14,1]){
            exponant = {1b1, 7d14} -1;
            mantissa = {i[0,14], 9d0};
        } else {
        if(i[13,1]){
            exponant = {1b1, 7d13} -1;
            mantissa = {i[0,13], 10d0};
        } else {
        if(i[12,1]){
            exponant = {1b1, 7d12} -1;
            mantissa = {i[0,12], 11d0};
        } else {
        if(i[11,1]){
            exponant = {1b1, 7d11} -1;
            mantissa = {i[0,11], 12d0};
        } else {
        if(i[10,1]){
            exponant = {1b1, 7d10} -1;
            mantissa = {i[0,10], 13d0};
        } else {
        if(i[9,1]){
            exponant = {1b1, 7d9} -1;
            mantissa = {i[0,9], 14d0};
        } else {
        if(i[8,1]){
            exponant = {1b1, 7d8} -1;
            mantissa = {i[0,8], 15d0};
        } else {
        if(i[7,1]){
            exponant = {1b1, 7d7} -1;
            mantissa = {i[0,7], 16d0};
        } else {
        if(i[6,1]){
            exponant = {1b1, 7d6} -1;
            mantissa = {i[0,6], 17d0};
        } else {
        if(i[5,1]){
            exponant = {1b1, 7d5} -1;
            mantissa = {i[0,5], 18d0};
        } else {
        if(i[4,1]){
            exponant = {1b1, 7d4} -1;
            mantissa = {i[0,4], 19d0};
        } else {
        if(i[3,1]){
            exponant = {1b1, 7d3} -1;
            mantissa = {i[0,3], 20d0};
        } else {
        if(i[2,1]){
            exponant = {1b1, 7d2} -1;
            mantissa = {i[0,2], 21d0};
        } else {
        if(i[1,1]){
            exponant = {1b1, 7d1} -1;
            mantissa = {i[0,1], 22d0};
        } else {
        if(i[0,1]){
            exponant = {1b1, 7d0} -1;
            mantissa = 0;
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
    f = {s, exponant, mantissa};
}


//equivalent to a ceil
algorithm float_to_uint32(input uint32 f, output uint32 i){
    if(f[31, 1]){
        i = 0;
    }
    else{
        uint8 exponant = 0;
        exponant = f[23, 7] + 1;
            if(31 == exponant){
                i = (1 << exponant) +  f[-8, 31];
            }
            if(30 == exponant){
                i = (1 << exponant) +  f[-7, 30];
            }
            if(29 == exponant){
                i = (1 << exponant) +  f[-6, 29];
            }
            if(28 == exponant){
                i = (1 << exponant) +  f[-5, 28];
            }
            if(27 == exponant){
                i = (1 << exponant) +  f[-4, 27];
            }
            if(26 == exponant){
                i = (1 << exponant) +  f[-3, 26];
            }
            if(25 == exponant){
                i = (1 << exponant) +  f[-2, 25];
            }
            if(24 == exponant){
                i = (1 << exponant) +  f[-1, 24];
            }
            if(23 == exponant){
                i = (1 << exponant) +  f[0, 23];
            }
            if(22 == exponant){
                i = (1 << exponant) +  f[1, 22];
            }
            if(21 == exponant){
                i = (1 << exponant) +  f[2, 21];
            }
            if(20 == exponant){
                i = (1 << exponant) +  f[3, 20];
            }
            if(19 == exponant){
                i = (1 << exponant) +  f[4, 19];
            }
            if(18 == exponant){
                i = (1 << exponant) +  f[5, 18];
            }
            if(17 == exponant){
                i = (1 << exponant) +  f[6, 17];
            }
            if(16 == exponant){
                i = (1 << exponant) +  f[7, 16];
            }
            if(15 == exponant){
                i = (1 << exponant) +  f[8, 15];
            }
            if(14 == exponant){
                i = (1 << exponant) +  f[9, 14];
            }
            if(13 == exponant){
                i = (1 << exponant) +  f[10, 13];
            }
            if(12 == exponant){
                i = (1 << exponant) +  f[11, 12];
            }
            if(11 == exponant){
                i = (1 << exponant) +  f[12, 11];
            }
            if(10 == exponant){
                i = (1 << exponant) +  f[13, 10];
            }
            if(9 == exponant){
                i = (1 << exponant) +  f[14, 9];
            }
            if(8 == exponant){
                i = (1 << exponant) +  f[15, 8];
            }
            if(7 == exponant){
                i = (1 << exponant) +  f[16, 7];
            }
            if(6 == exponant){
                i = (1 << exponant) +  f[17, 6];
            }
            if(5 == exponant){
                i = (1 << exponant) +  f[18, 5];
            }
            if(4 == exponant){
                i = (1 << exponant) +  f[19, 4];
            }
            if(3 == exponant){
                i = (1 << exponant) +  f[20, 3];
            }
            if(2 == exponant){
                i = (1 << exponant) +  f[21, 2];
            }
            if(1 == exponant){
                i = (1 << exponant) +  f[22, 1];
            }
    }
}



algorithm inf_float(input uint32 f1, input uint32 f2, output uint1 inf){
    inf = 0;
    if(f1[31, 1] & ~f2[31, 1]){
        inf = 1;
    }else{
        if(f1[23, 8] < f2[23, 8]){
            inf = 1;
        }
    }
}

algorithm sup_float(input uint32 f1, input uint32 f2, output uint1 inf){
    inf = 0;
    if(~f1[31, 1] & f2[31, 1]){
        inf = 1;
    }else{
        if(f1[23, 8] > f2[23, 8]){
            inf = 1;
        }
    }
}



//no subtract operation, to substract invert the sign bit of the secong float

algorithm add_float(input uint32 f1, input uint32 f2, output uint32 res){
    uint47 max_mantissa(0);
    uint47 min_mantissa(0);

    uint8 max_exponant(0);
    
    uint47 sum_mantissa(0);

    uint8 dif_exponent(0);
    uint1 f1_inf_f2 (0);
    inf_float inf;
    (f1_inf_f2)<-inf<-({1b0,f1[0, 31]},{1b0,f2[0, 31]}); 

    dif_exponent = (f1_inf_f2)?
                   (f2[23,8]) - (f1[23,8]) :
                   (f1[23,8]) - (f2[23,8]);

    
    max_exponant = (f1_inf_f2)?
                   (f2[23,8]):
                   (f1[23,8]);

    
        if(0 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {0b0,f1[0, 23], 23b0}  | {1b1, 46b0}; 
            }else{
                min_mantissa = {0b0,f2[0, 23], 23b0}  | {1b1, 46b0};
            }     

        }else{
        if(1 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {1b0,f1[0, 23], 22b0}  | {1b1, 45b0}; 
            }else{
                min_mantissa = {1b0,f2[0, 23], 22b0}  | {1b1, 45b0};
            }     

        }else{
        if(2 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {2b0,f1[0, 23], 21b0}  | {1b1, 44b0}; 
            }else{
                min_mantissa = {2b0,f2[0, 23], 21b0}  | {1b1, 44b0};
            }     

        }else{
        if(3 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {3b0,f1[0, 23], 20b0}  | {1b1, 43b0}; 
            }else{
                min_mantissa = {3b0,f2[0, 23], 20b0}  | {1b1, 43b0};
            }     

        }else{
        if(4 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {4b0,f1[0, 23], 19b0}  | {1b1, 42b0}; 
            }else{
                min_mantissa = {4b0,f2[0, 23], 19b0}  | {1b1, 42b0};
            }     

        }else{
        if(5 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {5b0,f1[0, 23], 18b0}  | {1b1, 41b0}; 
            }else{
                min_mantissa = {5b0,f2[0, 23], 18b0}  | {1b1, 41b0};
            }     

        }else{
        if(6 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {6b0,f1[0, 23], 17b0}  | {1b1, 40b0}; 
            }else{
                min_mantissa = {6b0,f2[0, 23], 17b0}  | {1b1, 40b0};
            }     

        }else{
        if(7 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {7b0,f1[0, 23], 16b0}  | {1b1, 39b0}; 
            }else{
                min_mantissa = {7b0,f2[0, 23], 16b0}  | {1b1, 39b0};
            }     

        }else{
        if(8 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {8b0,f1[0, 23], 15b0}  | {1b1, 38b0}; 
            }else{
                min_mantissa = {8b0,f2[0, 23], 15b0}  | {1b1, 38b0};
            }     

        }else{
        if(9 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {9b0,f1[0, 23], 14b0}  | {1b1, 37b0}; 
            }else{
                min_mantissa = {9b0,f2[0, 23], 14b0}  | {1b1, 37b0};
            }     

        }else{
        if(10 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {10b0,f1[0, 23], 13b0}  | {1b1, 36b0}; 
            }else{
                min_mantissa = {10b0,f2[0, 23], 13b0}  | {1b1, 36b0};
            }     

        }else{
        if(11 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {11b0,f1[0, 23], 12b0}  | {1b1, 35b0}; 
            }else{
                min_mantissa = {11b0,f2[0, 23], 12b0}  | {1b1, 35b0};
            }     

        }else{
        if(12 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {12b0,f1[0, 23], 11b0}  | {1b1, 34b0}; 
            }else{
                min_mantissa = {12b0,f2[0, 23], 11b0}  | {1b1, 34b0};
            }     

        }else{
        if(13 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {13b0,f1[0, 23], 10b0}  | {1b1, 33b0}; 
            }else{
                min_mantissa = {13b0,f2[0, 23], 10b0}  | {1b1, 33b0};
            }     

        }else{
        if(14 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {14b0,f1[0, 23], 9b0}  | {1b1, 32b0}; 
            }else{
                min_mantissa = {14b0,f2[0, 23], 9b0}  | {1b1, 32b0};
            }     

        }else{
        if(15 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {15b0,f1[0, 23], 8b0}  | {1b1, 31b0}; 
            }else{
                min_mantissa = {15b0,f2[0, 23], 8b0}  | {1b1, 31b0};
            }     

        }else{
        if(16 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {16b0,f1[0, 23], 7b0}  | {1b1, 30b0}; 
            }else{
                min_mantissa = {16b0,f2[0, 23], 7b0}  | {1b1, 30b0};
            }     

        }else{
        if(17 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {17b0,f1[0, 23], 6b0}  | {1b1, 29b0}; 
            }else{
                min_mantissa = {17b0,f2[0, 23], 6b0}  | {1b1, 29b0};
            }     

        }else{
        if(18 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {18b0,f1[0, 23], 5b0}  | {1b1, 28b0}; 
            }else{
                min_mantissa = {18b0,f2[0, 23], 5b0}  | {1b1, 28b0};
            }     

        }else{
        if(19 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {19b0,f1[0, 23], 4b0}  | {1b1, 27b0}; 
            }else{
                min_mantissa = {19b0,f2[0, 23], 4b0}  | {1b1, 27b0};
            }     

        }else{
        if(20 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {20b0,f1[0, 23], 3b0}  | {1b1, 26b0}; 
            }else{
                min_mantissa = {20b0,f2[0, 23], 3b0}  | {1b1, 26b0};
            }     

        }else{
        if(21 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {21b0,f1[0, 23], 2b0}  | {1b1, 25b0}; 
            }else{
                min_mantissa = {21b0,f2[0, 23], 2b0}  | {1b1, 25b0};
            }     

        }else{
        if(22 == dif_exponent){
            if(f1_inf_f2){
                min_mantissa = {22b0,f1[0, 23], 1b0}  | {1b1, 24b0}; 
            }else{
                min_mantissa = {22b0,f2[0, 23], 1b0}  | {1b1, 24b0};
            }     

        }else{
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }

    if(f1[31,1]==f2[31,1]){  
        
        max_mantissa = (f1_inf_f2)?
                        {1b0,f2[0, 23], 23b0}: 
                        {1b0,f1[0, 23], 23b0};

        sum_mantissa = max_mantissa + min_mantissa;
        if(sum_mantissa[46,1]){
            res ={f1[31,1], max_exponant+1, sum_mantissa[23,23]};
        }else{
            res ={f1[31,1], max_exponant, sum_mantissa[23,23]};
        }
    }
    else{
        uint1 res_sign(0);
        uint8 carry(0);
        uint23 res_mantissa(0);

        res_sign = f1_inf_f2 ? f2[31,1] : f1[31,1];
        max_mantissa = (f1_inf_f2)?
                        {1b1,f2[0, 23], 23b0}: 
                        {1b1,f1[0, 23], 23b0};

        sum_mantissa = max_mantissa - min_mantissa;
        __display("sum_mantissa %b",sum_mantissa);
    
        if(sum_mantissa[46,1]){
            carry = 0;
            __display("i %d",46);
            
                __display("start %d",23);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[23,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[45,1]){
            carry = 1;
            __display("i %d",45);
            
                __display("start %d",22);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[22,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[44,1]){
            carry = 2;
            __display("i %d",44);
            
                __display("start %d",21);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[21,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[43,1]){
            carry = 3;
            __display("i %d",43);
            
                __display("start %d",20);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[20,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[42,1]){
            carry = 4;
            __display("i %d",42);
            
                __display("start %d",19);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[19,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[41,1]){
            carry = 5;
            __display("i %d",41);
            
                __display("start %d",18);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[18,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[40,1]){
            carry = 6;
            __display("i %d",40);
            
                __display("start %d",17);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[17,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[39,1]){
            carry = 7;
            __display("i %d",39);
            
                __display("start %d",16);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[16,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[38,1]){
            carry = 8;
            __display("i %d",38);
            
                __display("start %d",15);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[15,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[37,1]){
            carry = 9;
            __display("i %d",37);
            
                __display("start %d",14);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[14,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[36,1]){
            carry = 10;
            __display("i %d",36);
            
                __display("start %d",13);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[13,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[35,1]){
            carry = 11;
            __display("i %d",35);
            
                __display("start %d",12);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[12,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[34,1]){
            carry = 12;
            __display("i %d",34);
            
                __display("start %d",11);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[11,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[33,1]){
            carry = 13;
            __display("i %d",33);
            
                __display("start %d",10);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[10,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[32,1]){
            carry = 14;
            __display("i %d",32);
            
                __display("start %d",9);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[9,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[31,1]){
            carry = 15;
            __display("i %d",31);
            
                __display("start %d",8);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[8,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[30,1]){
            carry = 16;
            __display("i %d",30);
            
                __display("start %d",7);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[7,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[29,1]){
            carry = 17;
            __display("i %d",29);
            
                __display("start %d",6);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[6,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[28,1]){
            carry = 18;
            __display("i %d",28);
            
                __display("start %d",5);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[5,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[27,1]){
            carry = 19;
            __display("i %d",27);
            
                __display("start %d",4);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[4,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[26,1]){
            carry = 20;
            __display("i %d",26);
            
                __display("start %d",3);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[3,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[25,1]){
            carry = 21;
            __display("i %d",25);
            
                __display("start %d",2);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[2,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[24,1]){
            carry = 22;
            __display("i %d",24);
            
                __display("start %d",1);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[1,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[23,1]){
            carry = 23;
            __display("i %d",23);
            
                __display("start %d",0);
                __display("size %d",23);
                __display("padding %d",0);
                res_mantissa = sum_mantissa[0,23];  
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[22,1]){
            carry = 24;
            __display("i %d",22);
            
                __display("start %d",0);
                __display("size %d",22);
                __display("padding %d",1);
                res_mantissa = {sum_mantissa[0,22],1b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[21,1]){
            carry = 25;
            __display("i %d",21);
            
                __display("start %d",0);
                __display("size %d",21);
                __display("padding %d",2);
                res_mantissa = {sum_mantissa[0,21],2b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[20,1]){
            carry = 26;
            __display("i %d",20);
            
                __display("start %d",0);
                __display("size %d",20);
                __display("padding %d",3);
                res_mantissa = {sum_mantissa[0,20],3b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[19,1]){
            carry = 27;
            __display("i %d",19);
            
                __display("start %d",0);
                __display("size %d",19);
                __display("padding %d",4);
                res_mantissa = {sum_mantissa[0,19],4b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[18,1]){
            carry = 28;
            __display("i %d",18);
            
                __display("start %d",0);
                __display("size %d",18);
                __display("padding %d",5);
                res_mantissa = {sum_mantissa[0,18],5b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[17,1]){
            carry = 29;
            __display("i %d",17);
            
                __display("start %d",0);
                __display("size %d",17);
                __display("padding %d",6);
                res_mantissa = {sum_mantissa[0,17],6b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[16,1]){
            carry = 30;
            __display("i %d",16);
            
                __display("start %d",0);
                __display("size %d",16);
                __display("padding %d",7);
                res_mantissa = {sum_mantissa[0,16],7b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[15,1]){
            carry = 31;
            __display("i %d",15);
            
                __display("start %d",0);
                __display("size %d",15);
                __display("padding %d",8);
                res_mantissa = {sum_mantissa[0,15],8b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[14,1]){
            carry = 32;
            __display("i %d",14);
            
                __display("start %d",0);
                __display("size %d",14);
                __display("padding %d",9);
                res_mantissa = {sum_mantissa[0,14],9b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[13,1]){
            carry = 33;
            __display("i %d",13);
            
                __display("start %d",0);
                __display("size %d",13);
                __display("padding %d",10);
                res_mantissa = {sum_mantissa[0,13],10b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[12,1]){
            carry = 34;
            __display("i %d",12);
            
                __display("start %d",0);
                __display("size %d",12);
                __display("padding %d",11);
                res_mantissa = {sum_mantissa[0,12],11b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[11,1]){
            carry = 35;
            __display("i %d",11);
            
                __display("start %d",0);
                __display("size %d",11);
                __display("padding %d",12);
                res_mantissa = {sum_mantissa[0,11],12b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[10,1]){
            carry = 36;
            __display("i %d",10);
            
                __display("start %d",0);
                __display("size %d",10);
                __display("padding %d",13);
                res_mantissa = {sum_mantissa[0,10],13b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[9,1]){
            carry = 37;
            __display("i %d",9);
            
                __display("start %d",0);
                __display("size %d",9);
                __display("padding %d",14);
                res_mantissa = {sum_mantissa[0,9],14b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[8,1]){
            carry = 38;
            __display("i %d",8);
            
                __display("start %d",0);
                __display("size %d",8);
                __display("padding %d",15);
                res_mantissa = {sum_mantissa[0,8],15b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[7,1]){
            carry = 39;
            __display("i %d",7);
            
                __display("start %d",0);
                __display("size %d",7);
                __display("padding %d",16);
                res_mantissa = {sum_mantissa[0,7],16b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[6,1]){
            carry = 40;
            __display("i %d",6);
            
                __display("start %d",0);
                __display("size %d",6);
                __display("padding %d",17);
                res_mantissa = {sum_mantissa[0,6],17b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[5,1]){
            carry = 41;
            __display("i %d",5);
            
                __display("start %d",0);
                __display("size %d",5);
                __display("padding %d",18);
                res_mantissa = {sum_mantissa[0,5],18b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[4,1]){
            carry = 42;
            __display("i %d",4);
            
                __display("start %d",0);
                __display("size %d",4);
                __display("padding %d",19);
                res_mantissa = {sum_mantissa[0,4],19b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[3,1]){
            carry = 43;
            __display("i %d",3);
            
                __display("start %d",0);
                __display("size %d",3);
                __display("padding %d",20);
                res_mantissa = {sum_mantissa[0,3],20b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[2,1]){
            carry = 44;
            __display("i %d",2);
            
                __display("start %d",0);
                __display("size %d",2);
                __display("padding %d",21);
                res_mantissa = {sum_mantissa[0,2],21b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[1,1]){
            carry = 45;
            __display("i %d",1);
            
                __display("start %d",0);
                __display("size %d",1);
                __display("padding %d",22);
                res_mantissa = {sum_mantissa[0,1],22b0};
                __display("res_mantissa %b",res_mantissa);
        }
        else{
        if(sum_mantissa[0,1]){
            carry = 46;
            __display("i %d",0);
            
                res_mantissa = 0;
        }
        else{

        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }

        res ={res_sign, max_exponant-carry, res_mantissa};
    }
}



algorithm main(output uint8 leds){
    uint32_to_float to_float;
    float_to_uint32 conv_prime;
    uint32 u1(1);
    uint32 u2(513);

    uint32 u3(0);
    inf_float inf;
    add_float add;
    uint32 f1 = uninitialized;
    uint32 f2 = uninitialized;
    uint32 f3 = uninitialized;
    uint1 b = uninitialized;

    (f1)<-to_float<-(u1);
    (f2)<-to_float<-(u2);
    ++:
    f1 = {1b1,f1[0,31]};

    ++:
    (f3)<-add<-(f1,f2);
    ++:
    (u3)<-conv_prime<-(f3);
    __display("- %d                  = %b %b %b", u1, f1[31,1], f1[23,8], f1[0,23]);
    __display(" %d                  = %b %b %b", u2,f2[31,1], f2[23,8], f2[0,23]);
    __display(" %d +- %d     = %b %b %b", u2, u1,f3[31,1], f3[23,8], f3[0,23]);
    __display("	res                  = %d", u3);
    
}
